swagger: '2.0'
info:
    description: 'This is a sample server Petstore server. For this sample, you can use the api key `special-key` to test the authorization filters.'
    version: 1.0.0
    x-citrus-app: PETS
    x-citrus-api-name: petstore
    title: OpenAPI Petstore
    license:
        name: Apache-2.0
        url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io
basePath: /v2
tags:
    - name: pet
      description: Everything about your Pets
    - name: store
      description: Access to Petstore orders
    - name: user
      description: Operations about user
schemes:
    - http
paths:
    '/pet/{petId}':
        get:
            tags:
                - pet
            summary: Find pet by ID
            description: Returns a single pet
            operationId: getPetById
            produces:
#                - application/xml
                - application/json
            parameters:
                - name: petId
                  in: path
                  description: ID of pet to return
                  required: true
                  type: integer
                  format: int64
                - name: verbose
                  description: Output details
                  in: query
                  required: false
                  type: boolean
                - name: correlationIds
                  description: ID to trace a request
                  in: header
                  required: false
                  type: string
            responses:
                '200':
                    description: successful operation
                    schema:
                        $ref: '#/definitions/Pet'
                '400':
                    description: Invalid ID supplied
                '404':
                    description: Pet not found
            security:
                - api_key: []
                - basicAuth: []
securityDefinitions:
    petstore_auth:
        type: oauth2
        authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
        flow: implicit
        scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
        type: apiKey
        name: api_key
        in: header
    basicAuth:
        type: basic
definitions:
    Order:
        title: Pet Order
        description: An order for a pets from the pet store
        type: object
        properties:
            id:
                type: integer
                format: int64
            petId:
                type: integer
                format: int64
            quantity:
                type: integer
                format: int32
            shipDate:
                type: string
                format: date-time
            status:
                type: string
                description: Order Status
                enum:
                    - placed
                    - approved
                    - delivered
            complete:
                type: boolean
                default: false
        xml:
            name: Order
    Category:
        title: Pet category
        description: A category for a pet
        type: object
        properties:
            id:
                type: integer
                format: int64
            name:
                type: string
        xml:
            name: Category
    User:
        title: a User
        description: A User who is purchasing from the pet store
        type: object
        properties:
            id:
                type: integer
                format: int64
            username:
                type: string
            firstName:
                type: string
            lastName:
                type: string
            email:
                type: string
            password:
                type: string
            phone:
                type: string
            userStatus:
                type: integer
                format: int32
                description: User Status
        xml:
            name: User
    Tag:
        title: Pet Tag
        description: A tag for a pet
        type: object
        properties:
            id:
                type: integer
                format: int64
            name:
                type: string
        xml:
            name: Tag
    Pet:
        title: a Pet
        description: A pet for sale in the pet store
        type: object
        required:
            - name
            - photoUrls
        properties:
            id:
                type: integer
                format: int64
            category:
                $ref: '#/definitions/Category'
            name:
                type: string
                example: doggie
            photoUrls:
                type: array
                xml:
                    name: photoUrl
                    wrapped: true
                items:
                    type: string
            tags:
                type: array
                xml:
                    name: tag
                    wrapped: true
                items:
                    $ref: '#/definitions/Tag'
            status:
                type: string
                description: pet status in the store
                enum:
                    - available
                    - pending
                    - sold
        xml:
            name: Pet
    ApiResponse:
        title: An uploaded response
        description: Describes the result of uploading an image resource
        type: object
        properties:
            code:
                type: integer
                format: int32
            type:
                type: string
            message:
                type: string
